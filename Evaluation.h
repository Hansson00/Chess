#pragma once
#include "Chess_utility.h"


const int piece_value[6] = { 0, 1, 3, 3, 5, 10 };

int Evaluate(Position* pos);

int eval_piece(uint64_t piece_board, const int* heatmap);

const int king_late_game[64] =
{ 
	-10, -10, -10, -10, -10, -10, -10, -10,
	-10, -5,  -5,  -5,   -5,  -5,  -5, -10,
	-10, -5,   5,   5,    5,   5,  -5, -10,
	-10, -5,   5,   5,    5,   5,  -5, -10,
	-10, -5,   5,   5,    5,   5,  -5, -10,
	-10, -5,   5,   5,    5,   5,  -5, -10,
	-10, -5,  -5,  -5,   -5,  -5,  -5, -10,
	-10, -10, -10, -10, -10, -10, -10, -10,
};
const int w_king_heatmap[64] =
{	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	-2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2,
	6, 9, 5, 0, 4, 0, 9, 6
};

const int b_king_heatmap[64] =
{	 
	6, 9, 5, 0, 4, 0, 9, 6,
	-2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
};

const int w_pawn_heatmap[64] =
{	
	20, 20, 20, 20, 20, 20, 20, 20,
	10, 10, 10, 10, 10, 10, 10, 10,
	0,  0,  3,  5,  5,  3,  0,  0,
	0,  1,  4,  6,  6,  4,  1,  0,
	0,  1,  6,  7,  7,  6,  1,  0,
	2,  2,  5,  2,  2,  6,  2,  1,
	2,  1,  1,  1,  1,  1,  1,  2,
	0,  0,  0,  0,  0,  0,  0,  0,
};

const int b_pawn_heatmap[64] =
{	
	0,  0,  0,  0,  0,  0,  0,  0,
	2,  1,  1,  1,  1,  1,  1,  2,
	2,  2,  5,  2,  2,  6,  2,  2,
	0,  1,  6,  7,  7,  6,  1,  0,
	0,  1,  4,  6,  6,  4,  1,  0,
	0,  0,  3,  5,  5,  3,  0,  0,
	10, 10, 10, 10, 10, 10, 10, 10,
	20, 20, 20, 20, 20, 20, 20, 20,
};

const int w_rook_heatmap[64] =
{ 
  0,   0,  0,  0,  0,  0,  0,  0,
  0,   0,  0,  0,  0,  0,  0,  0,
  0,   0,  0,  0,  0,  0,  0,  0,
  0,   0,  0,  0,  0,  0,  0,  0,
  0,   0,  0,  0,  0,  0,  0,  0,
  0,   0,  0,  0,  0,  0,  0,  0,
  0,   0,  0,  0,  0,  0,  0,  0, 
  -2,  0,  4,  5,  5,  4,  0, -2,
};

const int b_rook_heatmap[64] =
{
  -2,  0,  4,  5,  5,  4,  0,  -2,
   0,  0,  0,  0,  0,  0,  0,   0,
   0,  0,  0,  0,  0,  0,  0,   0,
   0,  0,  0,  0,  0,  0,  0,   0,
   0,  0,  0,  0,  0,  0,  0,   0,
   0,  0,  0,  0,  0,  0,  0,   0,
   0,  0,  0,  0,  0,  0,  0,   0,
   0,  0,  0,  0,  0,  0,  0,   0,
};

